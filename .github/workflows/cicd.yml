name: Build with Unit Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

#on: [push, pull_request]
jobs:
  test-core:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux dependencies
        if: "contains( matrix.os, 'ubuntu')"
        run: sudo apt-get install libssl-dev valgrind
      - name: Install Python dependencies for coverage
        run: |
          python -m pip install --upgrade pip
          pip install lxml
      - name: Build with Unit Tests
        uses: lukka/run-cmake@v1
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeGenerator: UnixMakefiles
          cmakeAppendedArgs: '-DUSE_GTEST=ON -DUSE_GCOV=ON'
          buildDirectory: ${{ github.workspace }}/build
#          useVcpkgToolchainFile: false
      - name: Run Unit Tests
#        if: "contains( matrix.os, 'ubuntu')"
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          ctest --output-on-failure .
          ctest -V --output-on-failure -T memcheck .
      - name: Process coverage
        working-directory: ${{ github.workspace }}/build
        run: | 
          make coverage
          cp ${{ github.workspace }}/.github/codecov/codecov.yml codecov.yml
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  test-pygroupsig:
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux dependencies for Core
        run: sudo apt-get install libssl-dev
      - name: Build Core
        uses: lukka/run-cmake@v1
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeGenerator: UnixMakefiles
          buildDirectory: ${{ github.workspace }}/build
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Test Python wrapper
        working-directory: ${{ github.workspace }}/src/wrappers/python
        run: |
          python -m pip install --upgrade pip
          pip install path.py pytest pytest-cov
          python setup.py install
          pytest -v --cov=./pygroupsig --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v1
#
#      - name: Install dependencies
#        working-directory: ${{ github.workspace }}/src/wrappers/python
#        run: |
#          python -m pip install --upgrade pip
##          pip install -r requirements.txt
##          pip install -r requirements-dev.txt
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # all Python files should follow PEP8 (except some notebooks, see setup.cfg)
#          flake8 jupytext tests
#          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --statistics
#      - name: Install from source (required for the pre-commit tests)
#        run: pip install .
#      - name: Test with pytest
#        run: pytest --cov=./ --cov-report=xml
#      - name: Upload coverage
#        uses: codecov/codecov-action@v1
#
#
  test-jsgroupsig:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install CMake
        run: sudo apt-get install libssl-dev cmake
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Node.js wrapper
        working-directory: ${{ github.workspace }}/src/wrappers/nodejs/jsgroupsig
        run: npm install
      - name: Test Node.js wrapper and generate coverage report
        working-directory: ${{ github.workspace }}/src/wrappers/nodejs/jsgroupsig
        run: npm test -- --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  test-jgroupsig:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [8, 9, 10, 11]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux dependencies
        run: sudo apt-get install libssl-dev valgrind
      - name: Build with Unit Tests
        uses: lukka/run-cmake@v1
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeGenerator: UnixMakefiles
          buildDirectory: ${{ github.workspace }}/build
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Build with Maven
        working-directory: ${{ github.workspace }}/src/wrappers/java/jgroupsig
        run: mvn clean package
